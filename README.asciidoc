= Elasticsearch

Elasticsearch é um mecanismo de pesquisa e analítica distribuído, armazenamento de dados escaláveis ​​​​e base de dados vetorial otimizado para velocidade e relevância nas cargas de trabalho em escala de produção. Elasticsearch é a fundação da plataforma Stack aberta do Elastic. Pesquise em conjuntos de dados quase em tempo real, realize pesquisas vetoriais, integre com as aplicações de IA generativas, e muito mais.

Casos de utilização ativados por Elasticsearch, incluem:

* https://www.elastic.co/search-labs/blog/articles/retrieval-augmented-generation-rag[Geração Aumentada de Recuperação (RAG)]
* https://www.elastic.co/search-labs/blog/categories/vector-search[Pesquisa de Vetor]
* Pesquisa de texto completo
* Registos de Eventos
* Métrica
* Monitorização do desempenho da aplicação (APM)
* Registos de eventos de segurança

\... e muito mais!

Para saber mais sobre as funcionaldies e capacidades do Elasticsearch, consulte a nossa
https://www.elastic.co/products/elasticsearch[página do produto].

Para aceder à informação em https://www.elastic.co/search-labs/blog/categories/ml-research[inovações de aprendizagem de máquina] e as últimas https://www.elastic.co/search-labs/blog/categories/lucene[contribuições de Lucene do Elastic], pode encontrar mais informação em https://www.elastic.co/search-labs[Search Labs].

[[get-started]]
== Introdução

O modo mais simples para configurar o Elasticsearch é criar uma implementação gerida
com o https://www.elastic.co/cloud/as-a-service[Serviço do Elasticsearch em Elastic
Cloud].

Se preferir instalar e gerir você mesmo o Elasticsearch, pode transferir a
versão mais recente da
https://www.elastic.co/downloads/elasticsearch[página de transferência do Elasticsearch].

=== Executar Elasticsearch localmente

////
IMPORTANTE: Este conteúdo é replicado no repositório do Elasticsearch. Consulte `run-elasticsearch-locally.asciidoc`.
Certifique-se que ambos os ficheiros estão sincronizados.

https://github.com/elastic/start-local is the source of truth.
////

[WARNING]
====
NÃO UTILIZE ESTAS INSTRUÇÕES PARA IMPLEMENTAÇÕES DE PRODUÇÃO.

Esta configtuação é destinada apenas para o desenvolvimento local e testes.
====

Configure rapidamente o Elasticsearch e Kibana in Docker para o desenvolvimento local ou testes, utilizando o https://github.com/elastic/start-local?tab=readme-ov-file#-try-elasticsearch-and-kibana-locally[''script'' `start-local`].

ℹ️ Para mais informação detalhada sobre a configuração `start-local`, consulte https://github.com/elastic/start-local[README no GitHub].

==== Pré-requisitos

- If you don't have Docker installed, https://www.docker.com/products/docker-desktop[download and install Docker Desktop] for your operating system.
- If you're using Microsoft Windows, then install https://learn.microsoft.com/en-us/windows/wsl/install[Windows Subsystem for Linux (WSL)].

==== Licença de testes

This setup comes with a one-month trial license that includes all Elastic features.

After the trial period, the license reverts to *Free and open - Basic*.
Refer to https://www.elastic.co/subscriptions[Elastic subscriptions] for more information.

==== Executar `start-local`

To set up Elasticsearch and Kibana locally, run the `start-local` script:

[source,sh]
----
curl -fsSL https://elastic.co/start-local | sh
----
// NOTCONSOLE

This script creates an `elastic-start-local` folder containing configuration files and starts both Elasticsearch and Kibana using Docker.

After running the script, you can access Elastic services at the following endpoints:

* *Elasticsearch*: http://localhost:9200
* *Kibana*: http://localhost:5601

The script generates a random password for the `elastic` user, which is displayed at the end of the installation and stored in the `.env` file.

[CAUTION]
====
This setup is for local testing only. HTTPS is disabled, and Basic authentication is used for Elasticsearch. For security, Elasticsearch and Kibana are accessible only through `localhost`.
====

==== Acesso da API

An API key for Elasticsearch is generated and stored in the `.env` file as `ES_LOCAL_API_KEY`.
Use this key to connect to Elasticsearch with a https://www.elastic.co/guide/en/elasticsearch/client/index.html[programming language client] or the https://www.elastic.co/guide/en/elasticsearch/reference/current/rest-apis.html[REST API].

From the `elastic-start-local` folder, check the connection to Elasticsearch using `curl`:

[source,sh]
----
source .env
curl $ES_LOCAL_URL -H "Authorization: ApiKey ${ES_LOCAL_API_KEY}"
----

To use the password for the `elastic` user, set and export the `ES_LOCAL_PASSWORD` environment variable. For example:

[source,sh]
----
source .env
export ES_LOCAL_PASSWORD
----

// NOTCONSOLE

=== Enviar pedidos para Elasticsearch

You send data and other requests to Elasticsearch through REST APIs.
You can interact with Elasticsearch using any client that sends HTTP requests,
such as the https://www.elastic.co/guide/en/elasticsearch/client/index.html[Elasticsearch
language clients] and https://curl.se[curl].

==== Utilização de curl

Here's an example curl command to create a new Elasticsearch index, using basic auth:

[source,sh]
----
curl -u elastic:$ES_LOCAL_PASSWORD \
  -X PUT \
  http://localhost:9200/my-new-index \
  -H 'Content-Type: application/json'
----

// NOTCONSOLE

==== Utilizar um cliente de linguagem

To connect to your local dev Elasticsearch cluster with a language client, you can use basic authentication with the `elastic` username and the password stored in the `ES_LOCAL_PASSWORD` environment variable.

You'll use the following connection details:

* **Elasticsearch endpoint**: `http://localhost:9200`
* **Username**: `elastic`
* **Password**: `$ES_LOCAL_PASSWORD` (Value you set in the environment variable)

For example, to connect with the Python `elasticsearch` client:

[source,python]
----
import os
from elasticsearch import Elasticsearch

username = 'elastic'
password = os.getenv('ES_LOCAL_PASSWORD') # Value you set in the environment variable

client = Elasticsearch(
    "http://localhost:9200",
    basic_auth=(username, password)
)

print(client.info())
----

==== Utilizar a Consola de Ferramentas de Desenvolvimento

Kibana's developer console provides an easy way to experiment and test requests.
To access the console, open Kibana, then go to **Management** > **Dev Tools**.

**Adicionar dados**

You index data into Elasticsearch by sending JSON objects (documents) through the REST APIs.
Whether you have structured or unstructured text, numerical data, or geospatial data,
Elasticsearch efficiently stores and indexes it in a way that supports fast searches.

For timestamped data such as logs and metrics, you typically add documents to a
data stream made up of multiple auto-generated backing indices.

To add a single document to an index, submit an HTTP post request that targets the index.

----
POST /customer/_doc/1
{
  "firstname": "Jennifer",
  "lastname": "Walters"
}
----

This request automatically creates the `customer` index if it doesn't exist,
adds a new document that has an ID of 1, and
stores and indexes the `firstname` and `lastname` fields.

The new document is available immediately from any node in the cluster.
You can retrieve it with a GET request that specifies its document ID:

----
GET /customer/_doc/1
----

To add multiple documents in one request, use the `_bulk` API.
Bulk data must be newline-delimited JSON (NDJSON).
Each line must end in a newline character (`\n`), including the last line.

----
PUT customer/_bulk
{ "create": { } }
{ "firstname": "Monica","lastname":"Rambeau"}
{ "create": { } }
{ "firstname": "Carol","lastname":"Danvers"}
{ "create": { } }
{ "firstname": "Wanda","lastname":"Maximoff"}
{ "create": { } }
{ "firstname": "Jennifer","lastname":"Takeda"}
----

**Pesquisar**

Indexed documents are available for search in near real-time.
The following search matches all customers with a first name of _Jennifer_
in the `customer` index.

----
GET customer/_search
{
  "query" : {
    "match" : { "firstname": "Jennifer" }
  }
}
----

**Explorar**

You can use Discover in Kibana to interactively search and filter your data.
From there, you can start creating visualizations and building and sharing dashboards.

To get started, create a _data view_ that connects to one or more Elasticsearch indices,
data streams, or index aliases.

. Go to **Management > Stack Management > Kibana > Data Views**.
. Select **Create data view**.
. Enter a name for the data view and a pattern that matches one or more indices,
such as _customer_.
. Select **Save data view to Kibana**.

To start exploring, go to **Analytics > Discover**.

[[upgrade]]
== Atualizar

To upgrade from an earlier version of Elasticsearch, see the
https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html[Elasticsearch upgrade
documentation].

[[build-source]]
== Criar a partir da fonte

Elasticsearch uses https://gradle.org[Gradle] for its build system.

To build a distribution for your local OS and print its output location upon
completion, run:
----
./gradlew localDistro
----

To build a distribution for another platform, run the related command:
----
./gradlew :distribution:archives:linux-tar:assemble
./gradlew :distribution:archives:darwin-tar:assemble
./gradlew :distribution:archives:windows-zip:assemble
----

Distributions are output to `distribution/archives`.

To run the test suite, see xref:TESTING.asciidoc[TESTING].

[[docs]]
== Documentação

For the complete Elasticsearch documentation visit
https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html[elastic.co].

For information about our documentation processes, see the
xref:docs/README.asciidoc[docs README].

[[examples]]
== Exemplos e guias

The https://github.com/elastic/elasticsearch-labs[`elasticsearch-labs`] repo contains executable Python notebooks, sample apps, and resources to test out Elasticsearch for vector search, hybrid search and generative AI use cases.


[[contribute]]
== Contribuir

For contribution guidelines, see xref:CONTRIBUTING.md[CONTRIBUTING].

[[questions]]
== Questões? Problemas? Sugestões?

* To report a bug or request a feature, create a
https://github.com/elastic/elasticsearch/issues/new/choose[GitHub Issue]. Please
ensure someone else hasn't created an issue for the same topic.

* Need help using Elasticsearch? Reach out on the
https://discuss.elastic.co[Elastic Forum] or https://ela.st/slack[Slack]. A
fellow community member or Elastic engineer will be happy to help you out.
